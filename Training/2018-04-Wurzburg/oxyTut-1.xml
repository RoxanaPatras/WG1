<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_bare.rng" type="application/xml"
	schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <title>Getting acquainted with oXygen</title>
            <author>Lou Burnard Consulting</author>
         </titleStmt>
         <publicationStmt>
            <p>For distribution at ELTeC Training Session, 2018-04-17</p>
         </publicationStmt>
         <sourceDesc>
            <p>Expanded from other oXygen Tutorials</p>
         </sourceDesc>
      </fileDesc>
      <revisionDesc>
         <change when="2018-04-14">split into three; provide header</change>
      </revisionDesc>
   </teiHeader>
   <text>
      <body>
         <p>This first tutorial explores
            the basic features provided by oXygen for the creation of a well formed and valid
            XML documents. It has three parts:
            <list rend="ordered"><item>introducing tags into a well formed document</item>
               <item>using a simple TEI schema </item><item>displaying tagged text</item></list>
         </p>
              <div>
                 <head>My first XML document</head>
                 <list>
                  <item>Start up oXygen.</item>
                  <item>Click on the New icon (first left on the toolbar); or select File->New from
                     the menu; or type CTRL-N</item>
                  <item>In the New dialogue, select <ident>New Document - Document XML</ident>
                     and click the <ident>Create</ident> button. </item>
                  <item>You are now in the typical oXygen workspace. There is a large white window
                     in the middle where you are going to work on your document, with some smaller
                     satellite windows we will look at later. <figure>
                        <graphic url="media/tuto-1.png" height="10cm"/>
                     </figure>
                  </item>
                  <item>Your workspace currently contains just one line: an XML Declaration like
                     this:  <egXML xmlns="http://www.tei-c.org/ns/Examples"> &lt;?xml version="1.0" encoding="UTF-8"?> </egXML> Every XML document has to begin with a line like
                     this. It shows a processor that this is an XML file, which version of XML this
                     file is using, and what character encoding has been used for its textual
                     content. XML version 1.0 is a W3C recommendation from 2008. UTF-8 (Universal
                     Character Set Transformation Format - 8 bit) is the usual way of representing
                     the Unicode character set, which supports most characters from nearly all human
                     writing systems. </item>

                  <item>The little red square at top right shows we have a problem! Look at the
                     error message at the bottom of the screen: <q>A well-formed document requires a
                        root element</q>. Ah yes, an XML document must have at least one tag in it.
                     Type the start-tag <gi>root</gi> oXygen obligingly completes this with a
                     closing tag <tag>/root</tag> as soon as you hit the <code>></code> character.
                     You now have a well-formed XML document and the little red square becomes
                     green. Well done! Let's make the document a bit more interesting by adding some
                     content to the element, for example, type <q>This is a well formed XML
                        document.</q> between the start and end tags. 
                     <figure>
                        <graphic url="media/tuto-2.png" width="75%"/>
                     </figure>
                  </item>
                  <item> Oxygen provides several ways of tagging documents. Let's try a second one.
                     Select the word <code>XML</code> with the mouse and then type CTRL-E. Now you
                     can enter a name for the tag you're adding: we suggest <ident>name</ident>
                     <figure>
                        <graphic url="media/tuto-3.png" width="75%"/>
                     </figure> Click <code>OK</code> to continue </item>
                  <item> XML elements can nest within each other: we have a <gi>root</gi> element
                     which contains a bit of text, followed by a <gi>name</gi> element, followed by
                     another bit of text. Select all three of these (i.e. everything inside the
                        <gi>root</gi>) and tag it <gi>sentence</gi> again using CTRL-E. <figure>
                        <graphic url="media/tuto-4.png" width="95%"/>
                     </figure>
                  </item>
                  <item> The third way of tagging a document is to divide up its elements
                     automatically. Put the cursor at the end of the <gi>sentence</gi> element you just
                     created (between <code>document.</code> and <tag>/sentence</tag>). Type
                        <code>ALT-SHIFT-d</code> to close this <gi>sentence</gi> and start a new one. You
                     can now add a second sentence to your document. The screen will scroll to the right as you type: <figure>
                        <graphic url="media/tuto-5.png" width="90%" />
                     </figure>
                  </item>
                  <item>To make the document look a bit nicer, type CTRL-SHIFT-p or
                     click the Format and Indent button. <figure>
                        <graphic url="media/tuto-6.png" width="75%"/>
                     </figure>
                  </item>
                  <item> oXygen also helps you when it comes to adding attributes. Put the cursor
                        <emph>inside</emph> the first <gi>sentence</gi> tag, just in front of the
                        <code>></code> and type a space, followed by <code>n="</code> . Oxygen adds
                     a <code>"</code> and the cursor stays there, waiting for your input. Type the
                     figure 1. 
                  </item>
                  <item> Number the second sentence "2" in the same way. <figure>
                     <graphic url="media/tuto-7.png" width="50%"/>
                  </figure> </item>
                  <item> Oxygen does its best to keep your document well-formed. Type a start-tag
                     for a new element somewhere (<gi>wibble</gi> for example) and oXygen will
                     immediately add a corresponding end-tag (<tag>/wibble</tag>). If you change the
                     name inside a start-tag, the end-tag will change to match it. However, if you
                     change the name inside an end-tag, oXygen signals an error. Type CTRL-z to undo
                     your last change to the document at any point. </item>
                
               </list>
               <p> What have we learned? There are three ways of adding tags to a document :<list>
                     <item>if you type a start-tag in the right place, oXygen will add the
                        corresponding end-tag, and leave the cursor in the right place for you to
                        add some content</item>
                     <item>if you highlight a bit of text, you can type CTRL-E to enclose it with
                        start and end tags </item>
                     <item>if you put the cursor anywhere inside an element and type ALT-SHIFT-d,
                        oXygen will divide the element in two at that point</item>
                     <item>and fourthly, you add attributes and their values inside a start-tag
                     </item>
                  </list></p>
            </div>
            <div>
               <head>Using a schema </head>
               <p>So far, oXygen didn't do anything to control which tags you used in your document.
                  It just ensured they were syntactically correct and that the document was well
                  formed. In this exercise you will use a predefined XML vocabulary to control which
                  tags and attributes are available in your document. </p>
               <list>
                  <item>Open oXygen and click on the New icon (first left on the toolbar); or select
                     File->New from the menu; or type CTRL-N. </item>
                  <item>The New File dialogue appears. Scroll down to see some of the options under
                     New Document: oXygen can work with all kinds of files, not only XML. Further
                     down, there is an option to choose from a long menu of pre-defined XML
                     vocabularies. oXygen comes ready to work with many of these, including several
                     varieties of TEI. As yet there is no ELTeC schema here ; instead we will use a
                     minimal TEI schema called TEI Bare.</item>

                  <item>In the New dialog, scroll down to the section <ident>Framework
                        templates</ident>, within that select <ident>TEI P5</ident>, and within that
                     select <ident>Bare</ident>. 
                     <figure> <graphic width="50%" url="media/tuto-8a.png"/>
                     </figure>
                  </item>
               </list>
               <p> When you press Create this time, oXygen displays the basic structure of a TEI document, ready for you to
                     complete. In the side window labelled Outline (select Window->Show View-Summary
                     if this is not visible) you can see that a document TEI has two major parts: a
                        <gi>teiHeader</gi> element containing metadata, which is followed by a
                        <gi>text</gi> element, containing the text itself. 
               
                </p>
               <p>       <graphic width="75%" url="media/tuto-8.png"/>
               </p>
               <div>
                  <head>Add the metadata</head>
                  <p>Every TEI document requires at least three pieces of metadata: a title,
                     information about its publication, and information about its source. For this
                     exercise, we suggest: <list>
                        <item>Type a title for the document you're creating between the
                              <gi>title</gi> and <tag>/title</tag> tags: <q>My second XML
                              document</q> for example. </item>
                        <item>Between the <gi>p</gi> and <tag>/p</tag> tags following the
                              <gi>publicationStmt</gi> tag type in a phrase such as <q>Unpublished
                              training exercise</q>.</item>
                        <item> Between the <gi>p</gi> and <tag>/p</tag> tags following the
                              <gi>sourceDesc</gi> tag type in a phrase such as <q>No pre-existing
                              source </q>.</item>
                     </list>
                  </p>
                  <p>Because you are using a schema, oXygen will only allow you to add elements
                     defined by that schema. <list>
                        <item>Put the cursor after the <code>&lt;/title&gt;</code> end-tag and
                           before the <code>&lt;/titleSmt&gt;</code> end-tag.</item>
                        <item>Type <code>&lt;</code> and wait for a moment.</item>
                        <item>The green square becomes red, because your document now has a &lt;
                           which is not followed by the name of an element.</item>
                        <item>oXygen suggests a list of elements that you could legally insert at
                           this point in the document: for example, you could add an <gi>author</gi>
                           element, or a second <gi>title</gi>, amongst other things.</item>
                        <item>hit the ENTER key to accept the first suggestion. oXygen inserts
                           start- and end-tags for an <gi>author</gi> element.</item>
                        <item>The cursor stays inside the start-tag for the element just in case you
                           wanted to add some attributes for the author. Type a space to see what
                           attributes are available. You don't need any of these, so type a
                           backspace and move the cursor to the right so that you can type in your
                           name as content of the <gi>element</gi>, since you are the author of this
                           document.</item>
                     </list>
                  </p>
               </div>
               <div>
                  <head>Adding text to the document</head>
                  <list>
                     <item>Select everything inside the <gi>body</gi>,element, i.e. the sequence
                           <code>&lt;p>Some text here&lt;/p></code>, including the tags. </item>
                     <item>Type <code>CTRL-e</code> (or select <ident>Document->Markup-> Surround
                           with tags</ident> from the menu). </item>
                     <item>As before, oXygen shows a list of the tags which are legal at this point;
                        in this case, you should choose <gi>div</gi>, and then click on
                           <ident>OK</ident>.</item>
                     <item>This <gi>div</gi> element will contain the first chapter of your novel.
                        Put the cursor inside the <tag>div</tag> start-tag and type a space to see
                        what attributes are available. This time, select the <att>n</att> attribute
                        which you can use this to number the chapter. Hit RETURN to insert it into
                        your document, and give it a value <code>1</code>.</item>
                     <item>Repeat this manoeuvre to add a <att>type</att> attribute with the value
                           <code>chapter</code>. If you'd prefer to work in some language other than
                        English, you could also add an <att>xml:lang</att> attribute to indicate the
                        language of your chapter. (Languages are indicated using ISO 639-2 language
                        codes e.g. <code>fr</code> for French, <code>sb</code> for Serbian
                        etc.)</item>
                     <item>The first chapter should have a title such as <q>Chapter One</q> or <q>In
                           the beginning</q>, or whatever you fancy. Add this title as the content
                        of a <gi>head</gi> element inserted at the begining of your <gi>div</gi>.
                     </item>
                  </list>
                  <p>Your document should now look something like this :</p>
                  <p>
                     <graphic height="4cm" url="media/tuto-9.png"/>
                  </p>
                  <p>Over to you to complete this chapter, preferably with some text a little more
                     interesting than <q>some text here</q> ! Describe your first reactions to using
                     oXygen, or your humble origins and early career as a researcher; share your
                     ideas on the current political situation; write a romantic novel; whatever you
                     like...</p>
                  <p>Of course, you'll need more than one paragraph to do your ideas justice. Do you
                     remember from the first exercise how to split this paragraph and begin a new
                     one? Assuming you now have several hundred words in your first paragraph and
                     you need to split it up:</p>
                  <list>
                     <item>Put the cursor at the point in your text where each new paragraph should
                        begin. </item>
                     <item>Type <code>ALT-SHIFT-d</code> (or Document -> Markup -> Split Element).
                     </item>
                  </list>
                  <p>If you want to start a new chapter, what will you do? </p>
                  <!-- <p>Dans un de vos chapitres, n'omettez pas d'ajouter une liste, balisée avec un
                  élément <gi>list</gi>, contenant une séquence de <gi>item</gi> éléments, précédée
                  d'un <gi>head</gi> facultatif.</p>
           -->
               </div>
            </div>
            <div>
               <head>Displaying tagged text</head>
               <p>Is the amount of tagging in your document beginning to worry you a little? </p>
               <p>You can tidy up the way the tagged text is displayed, as you know (click on the
                  Indent button, select Document-> Source->Format and Indent, or
                     <code>CTRL-SHIFT-P</code>). But maybe you'd rather see fewer tags? </p>
               <list>
                  <item>At the bottom of the screen there are three buttons marked Text, Grid, and
                     Author. Select the last one. The way your document is displayed changes and a
                     new <ident>TEI P5</ident> menu appears above the toolbar. Choose <ident>Tags
                        display mode</ident> from this menu and experiment with some of the
                     possibilities it offers as regards display of the tags in your document. </item>
                  <item>In any case, you can see that your document is now formatted : headings are
                     displayed in a different size, line breaks are treated as white space,
                     paragraphs are tidily aligned and so on.</item>
                  <item>Note that you are still editing the document, even though it looks
                     different. If you make a change in Author mode (delete or add a word, for
                     example) and then switch back to Text mode, the change will appear there as
                     well.</item>
               </list>
               <!-- <p>Plus tard, nous verrons comment vous pourrez contrôler l'affichage de votre document avec
          une <term>feuille de style</term>.</p>-->
            </div>

         
         
      </body>
   </text>
</TEI>
