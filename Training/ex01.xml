<?xml version="1.0" encoding="UTF-8"?>

<?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_bare.rng" type="application/xml"
	schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <title>Getting acquainted with oXygen</title>
         </titleStmt>
         <publicationStmt>
            <p>Publication Information</p>
         </publicationStmt>
         <sourceDesc>
            <p>Information about the source</p>
         </sourceDesc>
      </fileDesc>
   </teiHeader>
   <text>
      <body>
         <p>This little tutorial steps through some of the main features of oXygen. We will start by
            creating a new ELTeC level zero document from scratch. </p>
         <list>
            <item>Open oXygen and click on the New icon (first left on the toolbar); or select
               File->New from the menu; or type CTRL-N</item>
            <item>The New File dialogue appears. Scroll down to see some of the options under New
               Document: oXygen can be used to work with all kinds of files, not only XML. Further
               down, there is an option to choose from a long menu of pre-defined XML vocabularies.
               oXygen comes ready to work with many of these, including several varieties of TEI.
               However, as yet ELTeC is not amongst them. Select XML Document from the New Document
               menu, and enter an output filename at the bottom (I suggest your name). Now click the
               Customize button at the bottom of the dialog in order to specify the kind of XML
               document you want to create.</item>
            <item>If this is the first time you've done this, oXygen needs to be told where to find
               the definition for the XML customization we want to use. This is provided by a file
               called a <term>schema</term>, and this dialogue would like you to specify where to
               find it in the box labelled <ident>URL of schema</ident>. The file you need is called
                  <ident>eltec-0.rnc</ident> and you can get a local copy from your Work directory
               (it's in the folder Schema); alternatively you can find the same file online at
               http://distantreading.github.com/Schema/eltec-0.rnc. Use the arrow to the right of
               the window to navigate to the schema file and open it. Then Press the Create
               button.</item>
            <item>The main oXygen editing window opens, with the beginnings of an ELTeC XML file in
               it. Note the following: <list>
                  <item>At the top of the file there are two purple lines beginning
                        <code>&lt;?xml</code></item>
                  <item>The file contains tags (in blue) and attribute names (in orange) but no text
                     as yet</item>
                  <item>To the right of the main window there is a status bar with an angry red
                     square at the top and some red error flags. These correspond with parts of the
                     text display underlined in red.</item>
                  <item>Underneath the editing window there is an error message corresponding with
                     the first error flag: <code>element "sourceDesc" incomplete; expected element
                        "bibl" or "p"</code></item>
               </list></item>
            <item>The red flags tell us that although oXygen has done its best some additional
               information is needed to create a document which is valid according to the rules
               specified in the schema we have named. Let's fix up the errors! <list>
                  <item>We need to add something inside the element sourceDesc. Put the cursor
                     between the start and end tags for this element, i.e. after
                        <tag>sourceDesc</tag> and before <tag>/sourceDesc</tag>. Now type a &lt; </item>
                  <item>Scan the menu of possibilities which opens: you can insert an element called
                     bibl or p, a comment, or a few other oddities. Choose p and press
                     RETURN.</item>
                  <item>The first red error flag disappears, and the error message at the bottom of
                     the screen changes to <code>value of attribute xml:id is invalid</code>. This
                     is because our schema requires an identifier for every text and we have not
                     supplied one. Put the cursor between the quote marks and type in the identifier
                     for our sample novel which is (shall we say) <code>EN042</code>. The second
                     error message disappears! To celebrate, add a value (<code>en</code>) for the
                     attribute <att>xml:lang</att>: this specifies the language code for the
                     document. </item>
                  <item>The third error is like the first: <code>element "body" incomplete...</code>
                     so fix it in the same way. Put the cursor inside the <gi>body</gi> element and
                     type a &lt; to see what's legal here. We suggest you add a <tag>div
                        type="chapter"</tag>. Phew! no red marks anywhere! Your document is valid:
                     click the disk icon (or type CTRL-S, or choose File-Save from the menu) to save
                     it for further work.</item>
               </list></item>
         </list>
         <p>Valid as it is, this document is not much use to anyone without some content. We need to
            start adding text, both in the header (where the metadata describing it will be held)
            and in the body (where the transcribed text itself will reside). For this exercise we
            will work on just the first chapter of a deservedly forgotten English novel: Mrs Grey's
               <title>Passages in the life of a fast young lady</title> (1862).</p>
         <p> In your folder Work/Pages you will find page images of the chapter concerned. Take a
            look at the titlepage which is in file <ident>Work/Pages/006.png</ident> and browse a few of
            the other pages to get a taste for the kind of document you are dealing with. </p>
         <p>oXygen is just like any other editor: you can type in text, correct, cut and paste, and
            so on. Let's begin by typing some minimal metadata into the TEI Header. (We'll return to
            this topic later) <list>
               <item>First enter the title of the digital text we are creating. For ELTeC, this
                  should be the original main title (Passages in the life of a fast young lady),
                  followed by the phrase <code>: ELTeC edition</code>. </item>
               <item>Next complete the following information about the original author provided by
                  the <gi>author</gi> element: <list type="gloss">
                     <label>Name</label>
                     <item>Catherine Maria Grey</item>
                     <label>Dates</label>
                     <item/>
                     <label>Sex</label>
                     <item>f</item>
                  </list></item>
               <item>You should also take credit for your encoding by adding a <gi>respStmt</gi>
                  element after the <gi>author</gi>. This element should contain a <gi>resp</gi>
                  with the content <code>ELTeC encoding</code> and a <gi>name</gi> containing your
                  name.</item>
               <item>We will look more closely at the other header elements later. For the moment,
                  we suggest you just add <gi>p</gi> elements containing a few words for the
                  publication statement and the source description (<gi>sourceDesc</gi>). If you
                  feel ambitious, you could also add a <gi>revisionDesc</gi> containing a
                     <gi>change</gi> element at the end. </item>
            </list></p>
         <p>All being well, your header should look like something like this when you've finished: </p>
         <p>
            <graphic url="media/minHeader.png" width="75%"/>
         </p>
         <p>Now we'll proceed to transcribe and tag the text itself. </p>
         <p>First, open the page image for the beginning of the chapter in file <ident>Work/Pages/0008.png</ident>.
            You can do this directly within oXygen, or just by clicking on it in the File Explorer.
            Look at the page, and you will see that it contains a centered heading for the whole
            text (the title <hi>Passages ... Lady</hi>), followed by a heading for the first chapter
            (<hi>Chapter I.</hi>). There is then a paragraph of text <hi>A yellow fog... on the heart</hi>, and
            the first line of a second paragraph, <hi>It was on a morning when our metropolis</hi>. Finally
            there is a page footer containing the text <hi>Vol I</hi> and a signature <hi>B.</hi>. The words
            <hi>yellow fog</hi> are in small caps, but otherwise there is nothing particularly remarkable
            in the typography. </p>
         <p>For ELTeC purposes, we do not care about line breaks or other purely typographic
            features, such as the centralised line between the twi headings, or the page footer. But
            we need to show that there are two headings and place them correctly in the document
            structure. We don't need to capture line breaks explicitly, but we need to show the
            boundaries of the page, and of each paragraph. </p>
         <list>
            <item>Insert a <gi>pb</gi> element as the first thing inside the <gi>body</gi> element.
               Give its <att>n</att> attribute the value <code>1</code>. </item>
            <item>Insert a <gi>head</gi> element after the <gi>pb</gi>, but before the <gi>div</gi>
               you inserted to make the file valid. Then type the title of the whole work as content
               of this <gi>head</gi> element. No need to worry about the linebreaks or font changes. </item>
            <item>Now insert a second <gi>head</gi> element <emph>inside</emph> the <gi>div</gi> and
               type in its content <q>Chapter I</q>. </item>
            <item>Finally insert a <gi>p</gi> element and start typing the first paragraph into it.
               As before, no need to worry about typographic variation or linebreaks, but you should
               respect the spelling and capitalisation of the original. If you make a mistake, use
               CTRL-Z to undo your last action. </item>
         </list>
         <p>When you've finished your first page, it should look something like this: </p>
         <p>
            <graphic url="media/firstPage.png" width="70%"/>
         </p>
         <p>Are you ready for the next page? Open the appropriate graphic file in
            <ident>Work/Pages/0008.png</ident> and take a look. Note the following: <list>
               <item>there is a running page header which repeats the title, as well as giving the
                  page number; your transcription should include the latter (in a <gi>pb</gi>), but
                  not the former.</item>
               <item>the text contains some long dashes — e.g. between <q>garb</q> and <q>that </q>
                  in the first line — which should be distinguished from hyphens: use the Insert
                  Special Character command on the Edit menu to open a menu from which you can
                  select the correct Unicode character.</item>
               <item>some hyphens are simply typographic effects which can be ignored or discarded
                  (for example the one at the end of the third line) ; others however should be
                  retained. For example, starting on the 7th line but continuing to the 8th is a
                  sequence which looks like <q>orange-co-loured</q>, but which should probably be
                  transcribed as <q>orange-coloured</q>. </item>
            </list></p>
         <p>If you're happy typing, please continue! Take care that you insert the second
               <gi>pb</gi> and the whole of the text of this second page <emph>within</emph> the
            paragraph you began at the foot of the first page... and it continues on to the third
            page. </p>
         <p>If on the other hand you'd rather not have to do quite so much typing, there is a (more
            or less) tidied transcription of the next few pages of this chapter in the file
               <ident>Work/pp2-8.txt</ident>. We'll use that in the next few steps.</p>
         <list>
            <item>With the cursor inside the last <gi>p</gi> on page one, i.e. immediately after the
               word <q>metropolis</q>, Select Document -> File -> Insert File from the menu. Navigate to
               the file <ident>pp2-8.txt</ident> in your Work folder and click Open. The content of
               this file is inserted into your document, ready for you to edit it.</item>
         </list>
         <p>The text you've just added needs at least two things done to it. Firstly we need to
            change the page numbers (which appear as single digits on a line of their own) into
               <gi>pb</gi> elements, like the one you typed in earlier. Secondly we need to divide
            the text up into paragraphs with proper <gi>p</gi> tags rather than blank lines. Now, of
            course, we could do this by hand for a few pages, but that's not really a scalable
            solution. And a computer is not just a glorified typewriter! Let's use some of the
            special power of the digital to make our editing task easier. </p>
         <p>oXygen includes a powerful Search and Replace facility, which we will use to tackle the
            first problem. </p>
         <list>
            <item>With the cursor still immediately after the word <q>metropolis</q>, select Find ->
               Find/Replace, or type CTRL-F.</item>
            <item>In the dialog box that opens, first check that the option <code>Regular
                  expression</code> is selected. </item>
            <item>Type the following incantation into the <ident>Find</ident> box:
                  <code>\n(\d)[\s\n]+</code>. This is a regular expression: it means <q>find a
                  newline, followed by a single digit, followed by a sequence of one or more spaces
                  and newlines</q>. </item>
            <item>Type the following incantation into the <ident>Replace with</ident> box:
                  <code>&lt;pb n="\1"/>\n</code>. This is what will be used to replace the part of
               the input text matched by the regular expression. The <code>\1</code> part refers to that
               part of the regexp which was parenthesized, i.e. the page number.</item>
            <item>Double check you typed the incantations correctly, take a deep breath, and press
               the Replace All button. Did it work? If not, press CTRL-Z, and try again!</item>
         </list>
         <p>We could use the same technique to solve the other problem: you can probably work out
            how to define a regular expression for two consecutive newlines and replace it by the
            sequence <tag>/p>&lt;p</tag>. But instead I suggest you use a slightly slower but more
            accurate technique, relying on one of oXygen's built in XML manipulation facilities. As
            you can see if you look at the Outline view, or switch the display to Author mode,
            oXygen currently thinks that the whole of the text you just inserted is one big
            paragraph. It's simple to split that up.</p>
         <list>
            <item>In Text Mode, scroll the text to the end of that interminable paragraph on page 2,
               i.e. between the words <q>occupants of the cab.</q> and before <q>Along dirty
                  streets</q>. </item>
            <item>With the cursor at that point between the two paragraphs, press ALT-SHIFT-D, or
               select Document -> Markup -> Split Element from the menu. </item>
            <item>oXygen closes the current paragraph and opens a new one. Scroll down to the end of
               this new paragraph (after <q>and that quickly."</q> at the top of page 4), and repeat
               the manipulation.</item>
            <item>Proceed in this way to the end of the file. </item>
         </list>
      </body>
   </text>
</TEI>
